JQuery

1.JQuery是js库
    库：相当于java的工具类，库是用来存放东西的。JQuery是存放js代码的地方，里面放的是js代码写的很多函数。为了简化js代码操作DOM
    write less，do more

2.DOM对象和jQuery对象
    DOM对象：用js语法创建的对象称为DOM对象，也就是js对象
        var obj=document.getElementById("t"); obj就是DOM对象，也叫做js对象
    jQuery对象：使用jQuery语法表示的对象都叫jquery对象。【注意】jQuery表示的对象都是数组
        var jobj=$("#txt1"); jobj就是使用jQuery语法表示的对象，也就是jQuery对象，它是一个数组。数组中只有一个值

    两类对象可以相互转换的
        语法：
            $(dom对象) dom对象转换为jQuery
            从数组中获取第一个对象，第一个对象就是dom对象，使用[0]或者get（0） jQuery转dom
        目的：
            使用对象的方法或属性，是dom对象时可以使用dom对象的属性或方法。是jQuery对象可以使用jQuery的方法
        规范：
            jQuery对象为了和dom对象在命名上区别，习惯上jQuery对象名以$开头

3.选择器：就是一个字符串，用来定位dom对象的。定位了dom对象就能通过jQuery函数操作dom
    常用选择器：
        1.id选择器：通过dom对象的id定位dom对象，通过id找对象，id在当前页面下是唯一的
            $("#dom对象的id")
        2.class选择器：class表示css中的样式使用样式名称定位dom对象
            $(".class样式名")
        3.标签选择器：使用标签名称定位dom对象
            $("标签名称")

4.表单选择器：定位form 利用input的type属性值进行定位
    $(":type属性值")

5.过滤器：在定位了dom对象之后，根据一些条件筛选dom对象
    过滤器也是一个字符串，用于筛选dom对象，过滤器不能单独使用，需要和选择器一起使用
    基本过滤器
        $("选择器:first")：第一个dom对象
        $("选择器：last")：数组中最后一个dom对象
        $("选择器:eq(数组下标)")：获取指定下标的dom对象
        $("选择器:lt(下标)")：获取小于下标的所有dom对象
        $("选择器：gt（下标）")：获取大于下标的所有dom对象

6.表单属性过滤器：根据表单中dom对象的状态情况定位dom对象
    启用状态：enable
    不可用状态：disable
    选中状态：checked
    ps：
        选择可用的文本框：$(":text:enable")

7.第一组函数
    val（）
        无参形式：读取数组中第一个dom对象的value值
        有参形式：对数组中所有对象的value进行统一赋值
    text（）：
        无参：读取所有dom对象的文字显示内容，将所有内容拼接成一个字符串并返回
        有参：对所有dom对象的文字显示内容进行统一赋值
    attr():
        $(选择器).attr("属性名")：读取dom数组第一个对象的属性值
        $(选择器).attr("属性名","值")：对数组中所有的dom对象的属性设置为新的值

8.第二组函数
    remove（）
        $(选择器).remove()
        数组中所有dom对象连同其子对象一并删除
    empty（）
        $(选择器).empty()
        将数组中所有dom对象的子对象删除
    append()
        $(选择器).append("<div>动态添加</div>")
        为数组中所有dom添加子对象
    html()：设置或返回冤死的内容（innerHtml）
        $(选择器).html():无参，获取dom数组第一个元素的内容
        $(选择器).html(值):有参，设置dom的对象所有元素的内容
    each（）【重要】
        对数组，json，dom等数组进行遍历处理，对每个元素调用一次函数
        语法1：
            $.each(要遍历的对象，function(index,element){处理程序})//表示使用jQuery的each，循环数组，每个数组成员都会执行后面的处理函数
            $相当于类名
            .each相当于类中的静态方法

            ps.
            var arr={1,2,3}
            function shuchu(index,element){

            }
        语法2：循环jQuery对象，jQuery对象就是dom数组
            jquery对象.each(function(index,element){处理程序})
        index：数组下标
        element：数组中的对象

9.jQuery中给dom对象绑定事件
    1.$(选择器).事件名称（事件的处理函数）
        $(选择器):定位dom对象，dom对象可以有多个
        事件名称：js事件去掉on
        事件的处理函数：function，事件发生时，执行这个函数
        ps：
            $("#btn").click(function(){
                alert("按钮被点击")
            })
    2. on事件绑定
        $(选择器).on（事件名称，事件的处理函数）
        事件名称就是js事件中去掉on的部分
        $("#btn").on("click",function(){
            alert("按钮被点击")
        })

10.使用jQuery函数实现Ajax的处理
    没有jQuery之前使用异步对象，4步
    jQuery简化了Ajax的处理使用三个函数
        1.$.ajax():jquery中实现Ajax的核心函数
        2.$.post():使用post方式做Ajax请求
        3.$.get():使用get方式做ajax
    $.post()和$.get()，内部都是使用的$.ajax()

    $.ajax()的使用：
        函数的参数表示：请求的url，请求的方式，参数值等信息。$.ajax()参数是个json的结构
        ps：$.ajax({名称：值，名称：值。。。})
            $.ajax({async：true，
                    contentType:"application/json",
                    data:{name:"lisi",age:20},
                    dataType:json,
                    error:function(){请求出现错误时执行的函数}，
                    success:function(data){
                        //data就是responceText，时jQuery处理后的数据
                    }，
                    url:"bmiajax",
                    type："get"
                    })
        参数说明
            async：布尔类型，默认true，表示是异步请求的（和原教旨的Ajax  xmlhttp.open(get,url,true)一样）可以不写
            contentType：一个字符串，表示从浏览器发送给服务器参数的类型。可以不写
                表示请求的参数是json格式的，可以写application/json
            data:可以是字符串可以是数组可以是json，表示请求的参数和参数值。常用json格式
            dataType:表示期望从服务器端返回的数据格式，可选：xml，html，text，json
            error:请求执行错误是执行的函数
                error:function(){请求发生错误时执行的函数}
            success:请求成功，从服务器端返回数据，会执行success指定的函数（和原教旨 readyState==4 && status==200时）
            url：请求地址
            type:请求方式，get/post 默认get

            主要使用：url data dataType success

